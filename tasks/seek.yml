---
- name: Clone seek
  git:
    repo: 'https://github.com/seek4science/seek.git'
    dest: '{{ seek_install_path }}'
    version: 'v1.7.1'
#______________________________________
# Setting up Ruby and RubyGems with RVM

- name: Install rvm
  shell: '\curl -L https://get.rvm.io | bash'

#- name: Add www-data to rvm group 
#  user:
#    name: www-data
#    shell: /bin/bash
#    groups: rvm
#    append: yes
#  become_user: root
#  become_method: sudo

- name: Install Ruby
  shell: 'source {{ seek_env_path }} && /usr/local/rvm/bin/rvm install $(cat .ruby-version)'
  args:
    chdir: '{{ seek_install_path }}'
    executable: /bin/bash

#______________________________________
# Installing Gems

- name: Install bundler
  shell: 'source {{ seek_env_path }} && gem install bundler'
  args:
    chdir: '{{ seek_install_path }}'
    executable: /bin/bash

- name: Install ruby gems SEEK needs
  shell: 'source {{ seek_env_path }} && bundle install'
  args:
    chdir: '{{ seek_install_path }}'
    executable: /bin/bash

#______________________________________
# Setting up the Database

- name: Create seek user for mysql
  mysql_user:
    user: "{{ mysql_seek_user }}"
    host: "%"
    password: "{{ mysql_seek_password }}"
    priv: "*.*:ALL,GRANT"
  become_user: root
  become_method: sudo

- name: check if DB exists
  shell: mysql -e 'SHOW DATABASES;' | grep seek_production
  register: dbstatus
  failed_when: dbstatus.rc == 2
  become_user: root
  become_method: sudo

- name: Setup db configuration file
  template:
    src: database.yml.j2
    dest: '{{ seek_install_path }}/config/database.yml'
  when: dbstatus.rc != 0

- name: Create the database for SEEK and seed it with the default data
  shell: 'source {{ seek_env_path }} && bundle exec rake db:setup > /tmp/seek_db_craete.log'
  args:
    chdir: '{{ seek_install_path }}'
    executable: /bin/bash
  when: dbstatus.rc != 0

#______________________________________
# Compiling Assets

- name: Compiling assets
  shell: 'source {{ seek_env_path }} && bundle exec rake assets:precompile'
  args:
    chdir: '{{ seek_install_path }}'
    executable: /bin/bash

#______________________________________
# Serving SEEK through Apache

- stat:
    path: '/tmp/seek_passenger_install.log'
  register: stat_result

- name: Install passenger-install-apache2-module
  shell: 'source {{ seek_env_path }} && bundle exec passenger-install-apache2-module --auto > /tmp/seek_passenger_install.log'
  args:
    chdir: '{{ seek_install_path }}'
    executable: /bin/bash
  when: stat_result.stat.exists == False 

- name: Chek passenger is installed
  shell: cat /etc/apache2/apache2.conf
  register: passenger_register

- debug:
    msg: 'Passenger module already added to /etc/apache2/apache2.conf'
  when: passenger_register.stdout.find('mod_passenger.so') != -1

- name: Add passenger to apache2 config file
  shell: 'source {{ seek_env_path }} && bundle exec passenger-install-apache2-module --snippet >> /etc/apache2/apache2.conf'
  args:
    chdir: '{{ seek_install_path }}'
    executable: /bin/bash
  when: passenger_register.stdout.find('mod_passenger.so') == -1
  become_user: root
  become_method: sudo

- name: Create seek.conf in apache
  template:
    src: seek.conf.j2
    dest: /etc/apache2/sites-available/seek.conf
  become_user: root
  become_method: sudo

- name: Enable apache2 modules
  apache2_module:
    name: '{{ item }}'
    state: present
  with_items:
    - headers
    - expires
  become_user: root
  become_method: sudo

- name: Enable seek site
  command: '{{ item }}' 
  with_items:
    - '/usr/sbin/a2ensite seek'
    - '/usr/sbin/a2dissite 000-default'
  become_user: root
  become_method: sudo

- name: Restart apache2
  service:
    name: apache2
    state: restarted
  become_user: root
  become_method: sudo
